@namespace Douro
@using Douro.Values
@using Douro.Statements
@classname DouroParser

print<Print> =
	"print" _ expr:expression {
		new Print(expr)
	};

expression <Expr> = sum

sum <Expr> -memoize
	= lhs:product _? "+" _? rhs:sum	{ new Binary(lhs, rhs, Operator.Add) }
	/ lhs:product _? "-" _? rhs:sum	{ new Binary(lhs, rhs, Operator.Subtract) }
	/ product

product <Expr> -memoize
	= lhs:product _? "/" _? rhs:number { new Binary(lhs, rhs, Operator.Divide) }
	/ lhs:product _? "*" _? rhs:number { new Binary(lhs, rhs, Operator.Multiply) }
	/ number

number <Expr> =
	digit:("" [0-9]+) {
		new Number(digit)
	};

_ = [ \t]+ ;



